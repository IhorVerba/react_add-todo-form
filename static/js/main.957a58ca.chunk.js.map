{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","utils.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","TodoList","todos","map","getUserById","userId","usersFromServer","find","getNewTodoId","length","Math","max","initialTodos","App","useState","setTitle","setUserId","titleError","setTitleError","userIdError","setUserIdError","todosList","setTodosList","count","setCount","action","method","onSubmit","event","preventDefault","newTodo","newId","currentTodos","addTodo","htmlFor","type","value","placeholder","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.957a58ca.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user: { name, email } }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    title,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      key={id}\n      data-id={id}\n      className={`TodoInfo ${completed\n        ? 'TodoInfo--completed'\n        : ''}`}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import usersFromServer from './api/users';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nexport function getNewTodoId(todos: Todo[]) {\n  const maxId = todos.length > 0\n    ? Math.max(...todos.map(todo => todo.id))\n    : 0;\n\n  return maxId + 1;\n}\n","import './App.scss';\nimport React, { FormEventHandler, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { getUserById, getNewTodoId } from './utils';\n\nexport const initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [titleError, setTitleError] = useState(false);\n  const [userIdError, setUserIdError] = useState(false);\n\n  const [todosList, setTodosList] = useState<Todo[]>(initialTodos);\n  const [count, setCount] = useState(getNewTodoId(initialTodos));\n\n  const addTodo = (newTodo: Todo) => {\n    const newId = getNewTodoId(todosList);\n\n    setTodosList(currentTodos => [\n      ...currentTodos,\n      {\n        ...newTodo,\n        id: newId,\n      },\n    ]);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitleError(false);\n\n    return setTitle(event.target.value);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserIdError(false);\n\n    return setUserId(Number(event.target.value));\n  };\n\n  const reset = () => {\n    setCount(count + 1);\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit: FormEventHandler = (event) => {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    addTodo({\n      user: getUserById(userId),\n      id: count,\n      title,\n      completed: false,\n      userId,\n    });\n\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        key={count}\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            placeholder=\"Enter a title\"\n            onChange={handleTitleChange}\n          />\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todosList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}